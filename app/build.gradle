apply plugin: 'com.android.application'
def Jenkins_build_num = JENKINS_BUILD_NUMBER.toInteger()
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.poptek.jenkinstestapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode Jenkins_build_num
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias APP_KEY_ALIAS
            keyPassword APP_KEY_PASSWORD
            storeFile file(APP_STORE_FILE_DIR)
            storePassword APP_STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            /*apk重命名*/
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if("true".equals(IS_JENKINS)){
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${JENKINS_BUILD_NUMBER}-${JENKINS_TIME}.apk"
                    }else{
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${variant.versionCode}-${releaseTime()}.apk"
                    }

                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            /*apk重命名*/
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if("true".equals(IS_JENKINS)){
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${JENKINS_BUILD_NUMBER}-${JENKINS_TIME}.apk"
                    }else{
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${variant.versionCode}-${releaseTime()}.apk"
                    }
                }
            }
        }
    }


    lintOptions{
        abortOnError false
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'pom.properties'
    }
}

// 定义一个打包时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
